@page "/users/create"
@using Microsoft.EntityFrameworkCore
@using INTERNET_SHOP.Models
@inject IDbContextFactory<INTERNET_SHOP.Data.INTERNET_SHOPContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Create</PageTitle>

<h1>Create</h1>

<h2>User</h2>
<hr />
<div class="row">
    <div class="col-md-4">
        <EditForm method="post" Model="User" OnValidSubmit="AddUser" FormName="create" Enhance>
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger" role="alert"/>
            <div class="mb-3">
                <label for="ip" class="form-label">IP:</label> 
                <InputText id="ip" @bind-Value="User.IP" class="form-control" /> 
                <ValidationMessage For="() => User.IP" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="os" class="form-label">OS:</label> 
                <InputText id="os" @bind-Value="User.OS" class="form-control" /> 
                <ValidationMessage For="() => User.OS" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="pcname" class="form-label">PcName:</label> 
                <InputText id="pcname" @bind-Value="User.PcName" class="form-control" /> 
                <ValidationMessage For="() => User.PcName" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="manufacturerprocessor" class="form-label">ManufacturerProcessor:</label> 
                <InputText id="manufacturerprocessor" @bind-Value="User.ManufacturerProcessor" class="form-control" /> 
                <ValidationMessage For="() => User.ManufacturerProcessor" class="text-danger" /> 
            </div>        
            <button type="submit" class="btn btn-primary">Create</button>
        </EditForm>
    </div>
</div>

<div>
    <a href="/users">Back to List</a>
</div>

@code {
    [SupplyParameterFromForm]
    private User User { get; set; } = new();

    // To protect from overposting attacks, see https://learn.microsoft.com/aspnet/core/blazor/forms/#mitigate-overposting-attacks.
    private async Task AddUser()
    {
        using var context = DbFactory.CreateDbContext();
        context.User.Add(User);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/users");
    }
}
